AddMetaData(object = SERUAT_NPFR, metadata = ann, col.name = 'time.cell')
SERUAT_NPFR$orig.ident
SERUAT_NPFR@meta.data
View(SERUAT_NPFR)
View(ann)
AddMetaData(object = SERUAT_NPFR, metadata = ann$annotation, col.name = 'time.cell')
View(SERUAT_NPFR)
SERUAT_NPFR@meta.data <-cbind(SERUAT_NPFR@meta.data,ann$annotation)
SERUAT_NPFR@meta.data
colnames(SERUAT_NPFR@meta.data)[which(names(SERUAT_NPFR@meta.data) == "ann$annotation")] <- "annotation"
View(SERUAT_NPFR)
colOrd <- rownames(FetchData(SERUAT_NPFR,"ident"))
RcolData <- colData %>% slice(match(colOrd, ann))
library(dplyr)
RcolData <- colData %>% slice(match(colOrd, ann))
RcolData <- ann %>% slice(match(colOrd, ann$annotation))
View(RcolData)
RcolData <- ann %>% slice(match(colOrd, row.names(ann)))
View(RcolData)
View(RcolData)
SERUAT_NPFR@meta.data <-cbind(SERUAT_NPFR@meta.data,RcolData$annotation)
colnames(SERUAT_NPFR@meta.data)[which(names(SERUAT_NPFR@meta.data) == "RcolData$annotation")] <- "IsoPct"
View(SERUAT_NPFR)
SERUAT_NPFR@meta.data[["IsoPct"]]
plot <- DimPlot(SERUAT_NPFR, reduction = "pca") + NoLegend()
??DimPlot
library(Seurat)
plot <- DimPlot(SERUAT_NPFR, reduction = "pca") + NoLegend()
View(plot)
LabelClusters(plot = plot, id = "ident")
View(plot)
View(SERUAT_NPFR)
SERUAT_NPF$status<-ann$annotation
SERUAT_NPFR$status<-ann$annotation
SERUAT_NPFR
head(SERUAT_NPFR@meta.data)
SERUAT_NPFR <- SetIdent(SERUAT_NPFR, value = annotation)
SERUAT_NPFR <- SetIdent(SERUAT_NPFR, value = status)
SERUAT_NPFR <- SetIdent(SERUAT_NPFR, value = SERUAT_NPFR@meta.data$annotation)
View(SERUAT_NPFR)
plot <- DimPlot(SERUAT_NPFR, reduction = "pca") + NoLegend()
LabelClusters(plot = plot, id = "ident")
SERUAT_NPFR <- SetIdent(SERUAT_NPFR, value = SERUAT_NPFR@meta.data$IsoPct)
plot <- DimPlot(SERUAT_NPFR, reduction = "pca") + NoLegend()
LabelClusters(plot = plot, id = "ident")
plot <- DimPlot(SERUAT_NPFR, reduction = "umap")
# Load loomR
library(loomR)
library(Seurat)
setwd("E:/seq_data/FCA/")
loom_file <- connect(filename = "r_fca_biohub_head_10x.loom", mode = "r+", skip.validate=TRUE)
matrix_data <- as.data.frame(loom_file[["matrix"]][,])
rownames(matrix_data) <- loom_file[["col_attrs/CellID"]][]
colnames(matrix_data) <- loom_file[["row_attrs/Gene"]][]
matrix_data$annotation<-loom_file[["col_attrs/S_annotation"]][]
highNpfr<-(matrix_data[matrix_data$NPFR>1,])
drops <- c("annotation")
woAnn<-highNpfr[ , !(names(highNpfr) %in% drops)]
ann<- highNpfr["annotation"]
SERUAT_NPFR <- CreateSeuratObject(counts = t(woAnn), project = "high Npfr", min.cells = 0, min.features=0)
colOrd <- rownames(FetchData(SERUAT_NPFR,"ident"))
RcolData <- ann %>% slice(match(colOrd, row.names(ann)))
SERUAT_NPFR@meta.data <-cbind(SERUAT_NPFR@meta.data,RcolData$annotation)
colnames(SERUAT_NPFR@meta.data)[which(names(SERUAT_NPFR@meta.data) == "RcolData$annotation")] <- "annotation"
SERUAT_NPFR <- SetIdent(SERUAT_NPFR, value = SERUAT_NPFR@meta.data$annotation)
# SERUAT_NPFR[["percent.mt"]] <- PercentageFeatureSet(SERUAT_NPFR, pattern = "^MT-")
VlnPlot(SERUAT_NPFR, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
FeatureScatter(SERUAT_NPFR, feature1 = "nCount_RNA", feature2 = "nFeature_RNA") +
geom_smooth(method = 'lm')
library(ggplot2)
library(dplyr)
FeatureScatter(SERUAT_NPFR, feature1 = "nCount_RNA", feature2 = "nFeature_RNA") +
geom_smooth(method = 'lm')
SERUAT_NPFR <- NormalizeData(SERUAT_NPFR, normalization.method = "LogNormalize", scale.factor = 10000)
View(SERUAT_NPFR@meta.data)
SERUAT_NPFR <- FindVariableFeatures(SERUAT_NPFR, selection.method = "vst", nfeatures = 2000)
# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(SERUAT_NPFR), 10)
plot1 <- VariableFeaturePlot(SERUAT_NPFR)
LabelPoints(plot = plot1, points = top10, repel = TRUE)
all.genes <- rownames(SERUAT_NPFR)
SERUAT_NPFR <- ScaleData(SERUAT_NPFR, features = all.genes)
str(SERUAT_NPFR)
SERUAT_NPFR <- RunPCA(SERUAT_NPFR, features = VariableFeatures(object = SERUAT_NPFR))
print(SERUAT_NPFR[["pca"]], dims = 1:5, nfeatures = 5)
DimHeatmap(SERUAT_NPFR, dims = 1, cells = 500, balanced = TRUE)
ElbowPlot(SERUAT_NPFR)
SERUAT_NPFR <- FindNeighbors(SERUAT_NPFR, dims = 1:15)
SERUAT_NPFR <- FindClusters(SERUAT_NPFR, resolution = c(0.1,0.3, 0.5, 0.7, 1))
View(SERUAT_NPFR@meta.data)
DimPlot(SERUAT_NPFR, group.by = "RNA_snn_res.0.1", label = TRUE)
Idents(SERUAT_NPFR)
Idents(SERUAT_NPFR) <- "RNA_snn_res.0.1"
Idents(SERUAT_NPFR)
SERUAT_NPFR <- RunUMAP(SERUAT_NPFR, dims = 1:15)
DimPlot(SERUAT_NPFR, reduction = "umap")
DefaultAssay(SERUAT_NPFR) <- "RNA"
Seurat::FeaturePlot(SERUAT_NPFR, "NPF")
plot <- DimPlot(SERUAT_NPFR, reduction = "umap")
LabelClusters(plot = plot, id = "ident")
plot <- DimPlot(SERUAT_NPFR, reduction = "umap")
LabelClusters(plot = plot, id = "ident")
plot <- DimPlot(SERUAT_NPFR, reduction = "pca") + NoLegend()
LabelClusters(plot = plot, id = "ident")
SERUAT_NPFR <- SetIdent(SERUAT_NPFR, value = status)
SERUAT_NPFR <- SetIdent(SERUAT_NPFR, value = SERUAT_NPFR@meta.data$annotation)
plot <- DimPlot(SERUAT_NPFR, reduction = "pca") + NoLegend()
LabelClusters(plot = plot, id = "ident")
plot <- DimPlot(SERUAT_NPFR, reduction = "pca")
LabelClusters(plot = plot, id = "ident")
plot <- DimPlot(SERUAT_NPFR, reduction = "pca")
LabelClusters(plot = plot, id = "ident")
LabelClusters(plot = plot, id = "ident")
View(woAnn)
Seurat::FeaturePlot(SERUAT_NPFR, "ELAV")
Seurat::FeaturePlot(SERUAT_NPFR, "Elav")
SERUAT_NPFR <- RunUMAP(SERUAT_NPFR, dims = 1:15)
DimPlot(SERUAT_NPFR, reduction = "umap")
DefaultAssay(SERUAT_NPFR) <- "RNA"
Seurat::FeaturePlot(SERUAT_NPFR, "Elav")
Seurat::FeaturePlot(SERUAT_NPFR, "NPF")
Seurat::FeaturePlot(SERUAT_NPFR, "BRP")
gene_names <-  highNpfr[["row_attrs/Gene"]][]
gene_of_interest <- "NPFR"
gene_of_interest %in% gene_names
gene_of_interest %in% all.genes
gene_of_interest <- "Elav"
gene_of_interest %in% all.genes
test<-as.data.frame(all.genes)
View(test)
gene_of_interest <- "elav"
gene_of_interest %in% all.genes
gene_of_interest <- "brp"
gene_of_interest %in% all.genes
gene_of_interest <- "Syt1"
gene_of_interest %in% all.genes
neruon_cell_genes <- c("elav", "NPF", "Syt1", "brp")
Seurat::FeaturePlot(SERUAT_NPFR, neruon_cell_genes, ncol=2)
Seurat::VlnPlot(SERUAT_NPFR,
features = neruon_cell_genes,
ncol = 2)
seu_int <- Seurat::AddModuleScore(SERUAT_NPFR,
features = list(neruon_cell_genes),
name = "neruon_cell_genes")
seu_int@meta.data
Seurat::VlnPlot(SERUAT_NPFR,
"neruon_cell_genes1")
Seurat::VlnPlot(SERUAT_NPFR,
"neruon_cell_genes1")
Seurat::FeaturePlot(SERUAT_NPFR, "neruon_cell_genes1")
# Load loomR
library(loomR)
library(Seurat)
library(ggplot2)
library(dplyr)
setwd("E:/seq_data/FCA/")
loom_file <- connect(filename = "r_fca_biohub_head_10x.loom", mode = "r+", skip.validate=TRUE)
matrix_data <- as.data.frame(loom_file[["matrix"]][,])
rownames(matrix_data) <- loom_file[["col_attrs/CellID"]][]
colnames(matrix_data) <- loom_file[["row_attrs/Gene"]][]
highNpfr<-(matrix_data[matrix_data$NPFR>1,])
drops <- c("annotation")
woAnn<-highNpfr[ , !(names(highNpfr) %in% drops)]
SERUAT_NPFR <- CreateSeuratObject(counts = t(woAnn), project = "high Npfr", min.cells = 0, min.features=0)
library(ggplot2)
library(Matrix)
library(Seurat)
most_expressed_boxplot <- function(object, ngenes = 20){
# matrix of raw counts
cts <- Seurat::GetAssayData(object, assay = "RNA", slot = "counts")
# get percentage/cell
cts <- t(cts)/colSums(cts)*100
medians <- apply(cts, 2, median)
# get top n genes
most_expressed <- order(medians, decreasing = T)[ngenes:1]
most_exp_matrix <- as.matrix((cts[,most_expressed]))
# prepare for plotting
most_exp_df <- stack(as.data.frame(most_exp_matrix))
colnames(most_exp_df) <- c("perc_total", "gene")
# boxplot with ggplot2
boxplot <- ggplot(most_exp_df, aes(x=gene, y=perc_total)) +
geom_boxplot() +
coord_flip()
return(boxplot)
}
most_expressed_boxplot(SERUAT_NPFR, 20)
library(ggplot2)
library(Matrix)
library(Seurat)
most_expressed_boxplot <- function(object, ngenes = 20){
# matrix of raw counts
cts <- Seurat::GetAssayData(object, assay = "RNA", slot = "counts")
# get percentage/cell
cts <- t(cts)/colSums(cts)*100
medians <- apply(cts, 2, median)
# get top n genes
most_expressed <- order(medians, decreasing = T)[ngenes:1]
most_exp_matrix <- as.matrix((cts[,most_expressed]))
# prepare for plotting
most_exp_df <- stack(as.data.frame(most_exp_matrix))
colnames(most_exp_df) <- c("perc_total", "gene")
# boxplot with ggplot2
boxplot <- ggplot(most_exp_df, aes(x=gene, y=perc_total)) +
geom_boxplot() +
coord_flip()
return(boxplot)
}
most_expressed_boxplot(SERUAT_NPFR, 5)
SERUAT_NPFR <- Seurat::NormalizeData(SERUAT_NPFR,
normalization.method = "LogNormalize",
scale.factor = 10000)
SERUAT_NPFR <- Seurat::FindVariableFeatures(SERUAT_NPFR,
selection.method = "vst",
nfeatures = 2000)
# Identify the 10 most highly variable genes
top10 <- head(Seurat::VariableFeatures(SERUAT_NPFR), 10)
top10
vf_plot <- Seurat::VariableFeaturePlot(SERUAT_NPFR)
Seurat::LabelPoints(plot = vf_plot,
points = top10, repel = TRUE)
SERUAT_NPFR <- Seurat::ScaleData(SERUAT_NPFR,
features = rownames(SERUAT_NPFR))
saveRDS(SERUAT_NPFR, "seu_day1.rds")
rm(list = ls())
gc()
.rs.restartR()
SERUAT_NPFR <-readRDS("E:/seq_data/FCA/seu_day1.rds")
rm(list = ls())
gc()
.rs.restartR()
library(ggplot2)
library(Matrix)
library(Seurat)
SERUAT_NPFR <-readRDS("C:/dev/genomics/FCA/FCA_22_11.rds")
most_expressed_boxplot <- function(object, ngenes = 20){
# matrix of raw counts
cts <- Seurat::GetAssayData(object, assay = "RNA", slot = "counts")
# get percentage/cell
cts <- t(cts)/colSums(cts)*100
medians <- apply(cts, 2, median)
# get top n genes
most_expressed <- order(medians, decreasing = T)[ngenes:1]
most_exp_matrix <- as.matrix((cts[,most_expressed]))
# prepare for plotting
most_exp_df <- stack(as.data.frame(most_exp_matrix))
colnames(most_exp_df) <- c("perc_total", "gene")
# boxplot with ggplot2
boxplot <- ggplot(most_exp_df, aes(x=gene, y=perc_total)) +
geom_boxplot() +
coord_flip()
return(boxplot)
}
most_expressed_boxplot(SERUAT_NPFR, 5)
all.genes <- rownames(SERUAT_NPFR)
all_genes<-as.data.frame(rownames(SERUAT_NPFR))
gene_of_interest <- "Syt1"
gene_of_interest %in% all.genes
list_of_gene_yulia<-c("Dh44","NPF","NPFR","Tdc2","Crz","Trh","trh","fru","Syt1")
#SERUAT_NPFR <-readRDS("E:/seq_data/FCA/FCA17_11.rds")
library(ggplot2)
# SERUAT_NPFR[["percent.mt"]] <- PercentageFeatureSet(SERUAT_NPFR, pattern = "^MT-")
VlnPlot(SERUAT_NPFR, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
FeatureScatter(SERUAT_NPFR, feature1 = "nCount_RNA", feature2 = "nFeature_RNA") +
geom_smooth(method = 'lm')
SERUAT_NPFR <- NormalizeData(SERUAT_NPFR, normalization.method = "LogNormalize", scale.factor= 10000)
View(SERUAT_NPFR@meta.data)
SERUAT_NPFR <- FindVariableFeatures(SERUAT_NPFR, selection.method = "vst", nfeatures = 2000)
# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(SERUAT_NPFR), 10)
plot1 <- VariableFeaturePlot(SERUAT_NPFR)
LabelPoints(plot = plot1, points = top10, repel = TRUE)
all.genes <- rownames(SERUAT_NPFR)
SERUAT_NPFR <- ScaleData(SERUAT_NPFR, features = all.genes)
str(SERUAT_NPFR)
SERUAT_NPFR <- RunPCA(SERUAT_NPFR, features = VariableFeatures(object = SERUAT_NPFR))
print(SERUAT_NPFR[["pca"]], dims = 1:5, nfeatures = 5)
Seurat::ElbowPlot(SERUAT_NPFR, ndims = 40)
DimHeatmap(SERUAT_NPFR, dims = 1:10, cells = 200, balanced = TRUE)
DimHeatmap(SERUAT_NPFR)
SERUAT_NPFR <- FindNeighbors(SERUAT_NPFR, dims = 1:15)
SERUAT_NPFR <- FindClusters(SERUAT_NPFR, resolution = c(0.1,0.3, 0.5, 0.7, 1))
View(SERUAT_NPFR@meta.data)
#check what kind of resulution is the best
DimPlot(SERUAT_NPFR, group.by = "RNA_snn_res.0.3", label = TRUE)
Idents(SERUAT_NPFR)
Idents(SERUAT_NPFR) <- "RNA_snn_res.0.3"
Idents(SERUAT_NPFR)
SERUAT_NPFR <- RunUMAP(SERUAT_NPFR, dims = 1:15)
DimPlot(SERUAT_NPFR, reduction = "umap")
DefaultAssay(SERUAT_NPFR) <- "RNA"
Seurat::FeaturePlot(SERUAT_NPFR, "brp")
neruon_cell_genes <- c("elav", "NPF", "Syt1", "brp")
list_of_gene_yulia<-c("Dh44","NPF","NPFR","Tdc2","Crz","Trh","trh","fru","Syt1")
Seurat::FeaturePlot(SERUAT_NPFR, neruon_cell_genes, ncol=2)
Seurat::FeaturePlot(SERUAT_NPFR, list_of_gene_yulia, ncol=3)
#monocyte_genes <- c("CD14", "CST3", "CD68", "CTSS")
#plot <- DimPlot(SERUAT_NPFR, reduction = "umap")
#LabelClusters(plot = plot, id = "ident")
Seurat::VlnPlot(SERUAT_NPFR,
features = neruon_cell_genes,
ncol = 2)
Seurat::VlnPlot(SERUAT_NPFR,
features = list_of_gene_yulia,
ncol = 3)
SERUAT_NPFR <- Seurat::AddModuleScore(SERUAT_NPFR,
features = list(neruon_cell_genes),
name = "neruon_cell_genes")
SERUAT_NPFR <- Seurat::AddModuleScore(SERUAT_NPFR,
features = list(list_of_gene_yulia),
name = "list_of_gene_yulia")
View(SERUAT_NPFR@meta.data)
#Seurat::FeaturePlot(SERUAT_NPFR, #"neruon_cell_genes1")
#s.genes <- Seurat::cc.genes.updated.2019$s.genes
#g2m.genes <- Seurat::cc.genes.updated.2019$g2m.genes
#SERUAT_NPFR <- Seurat::CellCycleScoring(SERUAT_NPFR,
#                                     s.features #=s.genes,
#                                    g2m.features = #g2m.genes)
SERUAT_NPFR <- FindClusters(SERUAT_NPFR, resolution = c(0.1,0.3, 0.5, 0.7, 1))
View(SERUAT_NPFR@meta.data)
#check what kind of resulution is the best
DimPlot(SERUAT_NPFR, group.by = "RNA_snn_res.0.1", label = TRUE)
Idents(SERUAT_NPFR)
Idents(SERUAT_NPFR) <- "RNA_snn_res.0.1"
Idents(SERUAT_NPFR)
SERUAT_NPFR <- RunUMAP(SERUAT_NPFR, dims = 1:15)
DimPlot(SERUAT_NPFR, reduction = "umap")
DimPlot(SERUAT_NPFR, group.by = "RNA_snn_res.0.3", label = TRUE)
Idents(SERUAT_NPFR)
Idents(SERUAT_NPFR) <- "RNA_snn_res.0.3"
Idents(SERUAT_NPFR)
SERUAT_NPFR <- RunUMAP(SERUAT_NPFR, dims = 1:15)
DimPlot(SERUAT_NPFR, reduction = "umap")
DimPlot(SERUAT_NPFR, group.by = "RNA_snn_res.0.5", label = TRUE)
#Idents(SERUAT_NPFR)
Idents(SERUAT_NPFR) <- "RNA_snn_res.0.5"
#Idents(SERUAT_NPFR)
SERUAT_NPFR <- RunUMAP(SERUAT_NPFR, dims = 1:15)
DimPlot(SERUAT_NPFR, reduction = "umap")
#check what kind of resulution is the best
DimPlot(SERUAT_NPFR, group.by = "RNA_snn_res.0.3", label = TRUE)
#Idents(SERUAT_NPFR)
Idents(SERUAT_NPFR) <- "RNA_snn_res.0.3"
#Idents(SERUAT_NPFR)
DefaultAssay(SERUAT_NPFR) <- "RNA"
neruon_cell_genes <- c("elav", "NPF", "Syt1", "brp")
list_of_gene_yulia<-c("Dh44","NPF","NPFR","Tdc2","Crz","Trh","trh","fru","Syt1")
Seurat::FeaturePlot(SERUAT_NPFR, neruon_cell_genes, ncol=2)
Seurat::FeaturePlot(SERUAT_NPFR, list_of_gene_yulia, ncol=3)
Seurat::VlnPlot(SERUAT_NPFR,
features = neruon_cell_genes,
ncol = 2)
Seurat::VlnPlot(SERUAT_NPFR,
features = list_of_gene_yulia,
ncol = 3)
SERUAT_NPFR <- Seurat::AddModuleScore(SERUAT_NPFR,
features = list(neruon_cell_genes),
name = "neruon_cell_genes")
SERUAT_NPFR <- Seurat::AddModuleScore(SERUAT_NPFR,
features = list(list_of_gene_yulia),
name = "list_of_gene_yulia")
library(Seurat)
library(edgeR) # BiocManager::install("edgeR")
library(limma)
library("dittoSeq")
library("celldex")
de_genes <- Seurat::FindAllMarkers(SERUAT_NPFR,  min.pct = 0.25,
only.pos = TRUE)
de_genes <- subset(de_genes, de_genes$p_val_adj<0.05)
write.csv(de_genes, "E:/seq_data/FCA/de_genes_FindAllMarkers.csv", row.names = F, quote = F)
write.csv(de_genes, "C:/dev/genomics/FCA/de_genes_FindAllMarkers.csv", row.names = F, quote = F)
library(dplyr)
top_specific_markers <- de_genes %>%
group_by(cluster) %>%
top_n(3, avg_log2FC)
dittoSeq::dittoDotPlot(SERUAT_NPFR, vars = unique(top_specific_markers$gene),
group.by = "RNA_snn_res.0.3")
View(top_specific_markers)
#tried to give diffrent color palte ,didnt work
p1 <- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu')+guides(color = guide_legend(override.aes = list(size=1), ncol=2) )+theme(legend.title = element_text(size = 5),
legend.text = element_text(size = 5))+scale_fill_brewer(palette="Dark2")
#install.packages("wesanderson")
library(wesanderson)
library(RColorBrewer)
p2 <- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'Gender')
p3<-DimPlot(SERUAT_NPFR, reduction = "umap")
neruon_cell_genes <- c("elav", "NPF", "Syt1", "brp")
list_of_gene_yulia<-c("Dh44","NPF","NPFR","Tdc2","Crz","Trh","trh","fru","Syt1")
p4<-Seurat::FeaturePlot(SERUAT_NPFR, neruon_cell_genes, ncol=2)
p5<-Seurat::FeaturePlot(SERUAT_NPFR, list_of_gene_yulia, ncol=3)
plot(p1)
library(gridExtra)
plot(p1)
p1 <- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu')+guides(color = guide_legend(override.aes = list(size=1), ncol=2) )+theme(legend.title = element_text(size = 5),
legend.text = element_text(size = 5))
plot(p1)
plot(p4)
plot(p2)
plot(p3)
p1 <- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu')+theme(legend.title = element_text(size = 5),
legend.text = element_text(size = 5))
plot(p1)
p1 <- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu')
p6<- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu')
SERUAT_NPFR@meta.data
p6<- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'annotation')
view(SERUAT_NPFR@meta.data)
View(SERUAT_NPFR@meta.data)
temp<-SERUAT_NPFR@meta.data$tissu$annotation
SERUAT_NPFR@meta.data$tissu_new<-temp
View(SERUAT_NPFR@meta.data)
saveRDS(SERUAT_NPFR, "C:/dev/genomics/FCA/FCA_22_11.rds")
p6<- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu_new')
plot(p6)
p6<- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu_new')+theme(legend.title = element_text(size = 5),
legend.text = element_text(size = 5))
plot(p6)
p6<- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu_new')+theme(legend.title = element_text(size = 6),
legend.text = element_text(size = 6))
plot(p6)
#install.packages("wesanderson")
library(wesanderson)
p6<- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu_new')+theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 8))
פךםא)פ6
plot(p6)
temp<-SERUAT_NPFR@meta.data$tissu_new
temp<-as.data.frame(SERUAT_NPFR@meta.data$tissu_new)
View(temp)
p6<- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu_new',split.by ="Gender")+theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 8))
plot(p6)
p6<- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu_new',split.by ="RNA_snn_res.0.3")+theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 8))
plot(p6)
p6<- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu_new',split.by ="RNA_snn_res.0.3",ncol = 3)+theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 8))
plot(p6)
p6<- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu_new',split.by ="RNA_snn_res.0.3",nrow = 3)+theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 8))
p6<- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu_new',split.by ="RNA_snn_res.0.3",ncol = 3)+theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 8))
plot(p6)
p6<- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu_new',split.by ="RNA_snn_res.0.3",ncol = 3)+theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 8))+ scale_colour_manual(values = c("unannotated" = "white"))
plot(p6)
p6<- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu_new',split.by ="RNA_snn_res.0.3",ncol = 3)+theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 8))
plot(p6)
library(RColorBrewer)
test<-pie(rep(1, 5), col=palette)
install.packages("randomcoloR")
library(randomcoloR)
n <- 20
palette <- distinctColorPalette(n)
pie(rep(1, n), col=palette)
test<-pie(rep(1, n), col=palette)
colors37 = c("#466791","#60bf37","#953ada","#4fbe6c","#ce49d3","#a7b43d","#5a51dc","#d49f36","#552095","#507f2d","#db37aa","#84b67c","#a06fda","#df462a","#5b83db","#c76c2d","#4f49a3","#82702d","#dd6bbb","#334c22","#d83979","#55baad","#dc4555","#62aad3","#8c3025","#417d61","#862977","#bba672","#403367","#da8a6d","#a79cd4","#71482c","#c689d0","#6b2940","#d593a7","#895c8b","#bd5975")
unique(SERUAT_NPFR@meta.data$tissu_new)
tissue_name<-unique(SERUAT_NPFR@meta.data$tissu_new)
tissue_name
colors38 = c("#466791","#60bf37","#953ada","#4fbe6c","#ce49d3","#a7b43d","#5a51dc","#d49f36","#552095","#507f2d","#db37aa","#84b67c","#a06fda","#df462a","#5b83db","#c76c2d","#4f49a3","#82702d","#dd6bbb","#334c22","#d83979","#55baad","#dc4555","#62aad3","#8c3025","#417d61","#862977","#bba672","#403367","#da8a6d","#a79cd4","#71482c","#c689d0","#6b2940","#d593a7","#895c8b","#bd5975","#FFFFFF")
DimPlot(SERUAT_NPFR, label=T, group.by="Gender", cells.highlight= tissue_name, cols.highlight = colors38, cols= "grey")
DimPlot(SERUAT_NPFR, label=T, group.by="tissue_new", cells.highlight= "unannotated", cols.highlight = "Red", cols= "grey")
DimPlot(SERUAT_NPFR, label=T, group.by="tissu_new", cells.highlight= "unannotated", cols.highlight = "Red", cols= "grey")
test<-c(tissue_name)
test
DimPlot(SERUAT_NPFR, label=T, group.by="tissu_new", cells.highlight= test, cols.highlight = "red", cols= "grey")
DimPlot(object = SERUAT_NPFR, cells.highlight = "unannotated", cols.highlight = "red", cols = "gray", order = TRUE)
cell_names <- c("unannotated")
DimPlot(object = SERUAT_NPFR, cells.highlight = cell_names, cols.highlight = "red", cols = "gray", order = TRUE)
levels(Idents(SERUAT_NPFR))
split_seurat <- SplitObject(SERUAT_NPFR, split.by = "tissu_new")
View(split_seurat)
split_seurat <- split_seurat[-c("unannotated")]
new_list <- discard(test, .p = ~str_detect(.x,"unannotated"))
install.packages("purrr")
install.packages("purrr")
library(purrr)
new_list <- discard(test, .p = ~str_detect(.x,"unannotated"))
library(stringr)
new_list <- discard(test, .p = ~str_detect(.x,"unannotated"))
split_seurat <- split_seurat[new_list]
View(split_seurat)
??SplitObject
split_seurat
ttest<-MergeSTData(split_seurat)
View(split_seurat)
DimPlot(split_seurat)
plot <- FeaturePlot(SERUAT_NPFR, features = "NPF")
HoverLocator(plot = plot, information = FetchData(SERUAT_NPFR, vars = c("tissu_new", "PC_1", "nFeature_RNA")))
HoverLocator(plot = plot, information = FetchData(SERUAT_NPFR, vars = c("ident", "PC_1", "nFeature_RNA")))
# Include additional data to display alongside cell names by passing in a data frame of
# information Works well when using FetchData
plot <- FeaturePlot(SERUAT_NPFR, features = "NPFR")
HoverLocator(plot = plot, information = FetchData(SERUAT_NPFR, vars = c("ident", "PC_1", "nFeature_RNA")))
FeaturePlot(SERUAT_NPFR, features = "NPFR", min.cutoff = 1, max.cutoff = 3)
??FetchData
FetchData(object = SERUAT_NPFR, vars = 'PC_1')
head(FetchData(object = SERUAT_NPFR, vars = 'ident'))
FetchData(object = SERUAT_NPFR)
plot <- FeaturePlot(SERUAT_NPFR, features = "NPFR")
HoverLocator(plot = plot, information = FetchData(SERUAT_NPFR, vars = c("ident", "PC_1")))
SERUAT_NPFR@meta.data\
SERUAT_NPFR@meta.data
View(SERUAT_NPFR@meta.data)
unique(SERUAT_NPFR@meta.data$Barcode)
p6<- DimPlot(SERUAT_NPFR, reduction = 'umap', group.by = 'tissu_new',split.by ="Gender",ncol = 5)+theme(legend.title = element_text(size = 4),
legend.text = element_text(size = 4))
plot(p6)
p6<- DimPlot(SERUAT_NPFR, reduction = 'umap',split.by ="tissu_new",ncol = 5)+theme(legend.title = element_text(size = 4),
legend.text = element_text(size = 4))
plot(p6)
