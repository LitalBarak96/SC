# Load loomR
library(loomR)
library(Seurat)
setwd("E:/seq_data/FCA/")
loom_file <- connect(filename = "r_fca_biohub_head_10x.loom", mode = "r+", skip.validate=TRUE)
matrix_data <- as.data.frame(loom_file[["matrix"]][1,])
View(matrix_data)
matrix_data <- as.data.frame(loom_file[["matrix"]][1,1])
View(matrix_data)
matrix_data <- as.data.frame(loom_file[["matrix"]][,1])
View(matrix_data)
coltest<-loom_file[["col_attrs/CellID"]][]
coltest<-as.data.frame(loom_file[["col_attrs/CellID"]][])
View(coltest)
rowtest<-as.data.frame(loom_file[["row_attrs/Gene"]][])
View(rowtest)
View(coltest)
summary(colt\
summary(coltest)
coltest<-as.factor(as.data.frame(loom_file[["col_attrs/CellID"]][]))
coltest<-as.data.frame(as.factor(loom_file[["col_attrs/CellID"]][]))
View(coltest)
levels(coltest)
colnames(coltest)<-"cellid"
View(coltest)
grep_test<-dplyr::filter(coltest, !grepl("Female",cellid))
View(grep_test)
View(grep_test)
View(coltest)
matrix_data <- as.data.frame(loom_file[["matrix"]][,])
# Install devtools from CRAN
#install.packages("devtools")
# Use devtools to install hdf5r and loomR from GitHub
#devtools::install_github(repo = "hhoeflin/hdf5r")
#devtools::install_github(repo = "mojaveazure/loomR", ref = "develop")
#devtools::install_github('satijalab/seurat-data')
#devtools::install_github("thomasp85/patchwork")
# Load loomR
library(loomR)
library(Seurat)
setwd("E:/seq_data/FCA/")
loom_file <- connect(filename = "r_fca_biohub_head_10x.loom", mode = "r+", skip.validate=TRUE)
#coltest<-as.data.frame(as.factor(loom_file[["col_attrs/CellID"]][]))
#colnames(coltest)<-"cellid"
#rowtest<-as.data.frame(loom_file[["row_attrs/Gene"]][])
#male_sample<-dplyr::filter(coltest, !grepl("Female",cellid))
matrix_data <- as.data.frame(loom_file[["matrix"]][,])
rownames(matrix_data) <- loom_file[["col_attrs/CellID"]][]
colnames(matrix_data) <- loom_file[["row_attrs/Gene"]][]
#matrix_data$annotation<-loom_file[["col_attrs/S_annotation"]][]
# library("writexl")
#write_xlsx(matrix_data,"E:/seq_data/FCA/loom_r_fac_head.xlsx")
#write.csv(matrix_data,"E:/seq_data/FCA/loom_r_fac_head.csv", row.names = TRUE)
#head(matrix_data)
#small_test<-matrix_data[1:10,1:10]
highNpfr<-as.matrix(matrix_data[matrix_data$NPFR>1,])
SERUAT_NPFR <- CreateSeuratObject(counts = t(highNpfr), project = "high Npfr", min.cells = 0, min.features=0)
matrix_data <- as.data.frame(loom_file[["matrix"]][,])
rownames(matrix_data) <- loom_file[["col_attrs/CellID"]][]
colnames(matrix_data) <- loom_file[["row_attrs/Gene"]][]
matrix_data$annotation<-loom_file[["col_attrs/S_annotation"]][]
small_test<-matrix_data[1:10,1:10]
mydata2 = select(small_test, -annotation)
drops <- c("annotation")
small_test[ , !(names(small_test) %in% drops)]
View(small_test)
drops <- c("140up")
small_test[ , !(names(small_test) %in% drops)]
View(small_test)
drops <- c("140up")
test<-small_test[ , !(names(small_test) %in% drops)]
View(test)
highNpfr<-as.matrix(matrix_data[matrix_data$NPFR>1,])
drops <- c("annotation")
woAnn<-highNpfr[ , !(names(highNpfr) %in% drops)]
View(highNpfr)
highNpfr<-(matrix_data[matrix_data$NPFR>1,])
drops <- c("annotation")
woAnn<-highNpfr[ , !(names(highNpfr) %in% drops)]
SERUAT_NPFR <- CreateSeuratObject(counts = t(woAnn), project = "high Npfr", min.cells = 0, min.features=0)
SERUAT_NPFR <- NormalizeData(SERUAT_NPFR, normalization.method = "LogNormalize", scale.factor = 10000)
View(SERUAT_NPFR)
View(SERUAT_NPFR@meta.data)
SERUAT_NPFR[["percent.mt"]] <- PercentageFeatureSet(SERUAT_NPFR, pattern = "^MT-")
View(SERUAT_NPFR)
VlnPlot(nsclc.seurat.obj, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
VlnPlot(SERUAT_NPFR, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
VlnPlot(SERUAT_NPFR, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
SERUAT_NPFR[["percent.npf"]] <- PercentageFeatureSet(SERUAT_NPFR, pattern = "^NPF-")
VlnPlot(SERUAT_NPFR, features = c("nFeature_RNA", "nCount_RNA","percent.npf"), ncol = 3)
VlnPlot(SERUAT_NPFR, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
FeatureScatter(SERUAT_NPFR, feature1 = "nCount_RNA", feature2 = "nFeature_RNA") +
geom_smooth(method = 'lm')
library(ggplot2)
FeatureScatter(SERUAT_NPFR, feature1 = "nCount_RNA", feature2 = "nFeature_RNA") +
geom_smooth(method = 'lm')
SERUAT_NPFR <- NormalizeData(SERUAT_NPFR, normalization.method = "LogNormalize", scale.factor = 10000)
SERUAT_NPFR <- FindVariableFeatures(SERUAT_NPFR, selection.method = "vst", nfeatures = 2000)
# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(SERUAT_NPFR), 10)
plot1 <- VariableFeaturePlot(SERUAT_NPFR)
LabelPoints(plot = plot1, points = top10, repel = TRUE)
View(SERUAT_NPFR)
test<- highNpfr["annotation"]
View(test)
ann<- highNpfr["annotation"]
View(ann)
SERUAT_NPFR$celltypes <ann
View(SERUAT_NPFR)
install.packages("SingleR")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SingleR")
all.genes <- rownames(SERUAT_NPFR)
SERUAT_NPFR <- ScaleData(SERUAT_NPFR, features = all.genes)
str(SERUAT_NPFR)
SERUAT_NPFR <- RunPCA(SERUAT_NPFR, features = VariableFeatures(object = SERUAT_NPFR))
print(SERUAT_NPFR[["pca"]], dims = 1:5, nfeatures = 5)
DimHeatmap(SERUAT_NPFR, dims = 1, cells = 500, balanced = TRUE)
ElbowPlot(SERUAT_NPFR)
SERUAT_NPFR <- FindNeighbors(SERUAT_NPFR, dims = 1:12)
SERUAT_NPFR <- FindClusters(SERUAT_NPFR, resolution = c(0.1,0.3, 0.5, 0.7, 1))
View(SERUAT_NPFR@meta.data)
DimPlot(SERUAT_NPFR, group.by = "RNA_snn_res.0.5", label = TRUE)
DimPlot(SERUAT_NPFR, group.by = "RNA_snn_res.0.1", label = TRUE)
DimPlot(SERUAT_NPFR, group.by = "RNA_snn_res.0.3", label = TRUE)
DimPlot(SERUAT_NPFR, group.by = "RNA_snn_res.0.7", label = TRUE)
DimPlot(SERUAT_NPFR, group.by = "RNA_snn_res.0.1", label = TRUE)
Idents(SERUAT_NPFR)
Idents(SERUAT_NPFR) <- "RNA_snn_res.0.1"
Idents(SERUAT_NPFR)
SERUAT_NPFR <- RunUMAP(SERUAT_NPFR, dims = 1:15)
DimPlot(SERUAT_NPFR, reduction = "umap")
DefaultAssay(SERUAT_NPFR) <- "RNA"
Seurat::FeaturePlot(SERUAT_NPFR, "NPF")
ElbowPlot(SERUAT_NPFR)
SERUAT_NPFR <- FindNeighbors(SERUAT_NPFR, dims = 1:15)
SERUAT_NPFR <- FindClusters(SERUAT_NPFR, resolution = c(0.1,0.3, 0.5, 0.7, 1))
View(SERUAT_NPFR@meta.data)
DimPlot(SERUAT_NPFR, group.by = "RNA_snn_res.0.3", label = TRUE)
Idents(SERUAT_NPFR)
Idents(SERUAT_NPFR) <- "RNA_snn_res.0.3"
Idents(SERUAT_NPFR)
SERUAT_NPFR <- RunUMAP(SERUAT_NPFR, dims = 1:15)
DimPlot(SERUAT_NPFR, reduction = "umap")
DefaultAssay(SERUAT_NPFR) <- "RNA"
Seurat::FeaturePlot(SERUAT_NPFR, "NPF")
Seurat::FeaturePlot(SERUAT_NPFR, "NPFR")
Seurat::FeaturePlot(SERUAT_NPFR, "NPF")
CreateSinglerSeuratObject??
??CreateSinglerSeuratObject
AddMetaData(object = SERUAT_NPFR, metadata = ann, col.name = 'time.cell')
??AddMetaData
library(SeuratObject)
AddMetaData(object = SERUAT_NPFR, metadata = ann, col.name = 'time.cell')
SERUAT_NPFR$orig.ident
SERUAT_NPFR@meta.data
View(SERUAT_NPFR)
View(ann)
AddMetaData(object = SERUAT_NPFR, metadata = ann$annotation, col.name = 'time.cell')
View(SERUAT_NPFR)
SERUAT_NPFR@meta.data <-cbind(SERUAT_NPFR@meta.data,ann$annotation)
SERUAT_NPFR@meta.data
colnames(SERUAT_NPFR@meta.data)[which(names(SERUAT_NPFR@meta.data) == "ann$annotation")] <- "annotation"
View(SERUAT_NPFR)
colOrd <- rownames(FetchData(SERUAT_NPFR,"ident"))
RcolData <- colData %>% slice(match(colOrd, ann))
library(dplyr)
RcolData <- colData %>% slice(match(colOrd, ann))
RcolData <- ann %>% slice(match(colOrd, ann$annotation))
View(RcolData)
RcolData <- ann %>% slice(match(colOrd, row.names(ann)))
View(RcolData)
View(RcolData)
SERUAT_NPFR@meta.data <-cbind(SERUAT_NPFR@meta.data,RcolData$annotation)
colnames(SERUAT_NPFR@meta.data)[which(names(SERUAT_NPFR@meta.data) == "RcolData$annotation")] <- "IsoPct"
View(SERUAT_NPFR)
SERUAT_NPFR@meta.data[["IsoPct"]]
plot <- DimPlot(SERUAT_NPFR, reduction = "pca") + NoLegend()
??DimPlot
library(Seurat)
plot <- DimPlot(SERUAT_NPFR, reduction = "pca") + NoLegend()
View(plot)
LabelClusters(plot = plot, id = "ident")
View(plot)
View(SERUAT_NPFR)
SERUAT_NPF$status<-ann$annotation
SERUAT_NPFR$status<-ann$annotation
SERUAT_NPFR
head(SERUAT_NPFR@meta.data)
SERUAT_NPFR <- SetIdent(SERUAT_NPFR, value = annotation)
SERUAT_NPFR <- SetIdent(SERUAT_NPFR, value = status)
SERUAT_NPFR <- SetIdent(SERUAT_NPFR, value = SERUAT_NPFR@meta.data$annotation)
View(SERUAT_NPFR)
plot <- DimPlot(SERUAT_NPFR, reduction = "pca") + NoLegend()
LabelClusters(plot = plot, id = "ident")
SERUAT_NPFR <- SetIdent(SERUAT_NPFR, value = SERUAT_NPFR@meta.data$IsoPct)
plot <- DimPlot(SERUAT_NPFR, reduction = "pca") + NoLegend()
LabelClusters(plot = plot, id = "ident")
plot <- DimPlot(SERUAT_NPFR, reduction = "umap")
# Load loomR
library(loomR)
library(Seurat)
setwd("E:/seq_data/FCA/")
loom_file <- connect(filename = "r_fca_biohub_head_10x.loom", mode = "r+", skip.validate=TRUE)
matrix_data <- as.data.frame(loom_file[["matrix"]][,])
rownames(matrix_data) <- loom_file[["col_attrs/CellID"]][]
colnames(matrix_data) <- loom_file[["row_attrs/Gene"]][]
matrix_data$annotation<-loom_file[["col_attrs/S_annotation"]][]
highNpfr<-(matrix_data[matrix_data$NPFR>1,])
drops <- c("annotation")
woAnn<-highNpfr[ , !(names(highNpfr) %in% drops)]
ann<- highNpfr["annotation"]
SERUAT_NPFR <- CreateSeuratObject(counts = t(woAnn), project = "high Npfr", min.cells = 0, min.features=0)
colOrd <- rownames(FetchData(SERUAT_NPFR,"ident"))
RcolData <- ann %>% slice(match(colOrd, row.names(ann)))
SERUAT_NPFR@meta.data <-cbind(SERUAT_NPFR@meta.data,RcolData$annotation)
colnames(SERUAT_NPFR@meta.data)[which(names(SERUAT_NPFR@meta.data) == "RcolData$annotation")] <- "annotation"
SERUAT_NPFR <- SetIdent(SERUAT_NPFR, value = SERUAT_NPFR@meta.data$annotation)
# SERUAT_NPFR[["percent.mt"]] <- PercentageFeatureSet(SERUAT_NPFR, pattern = "^MT-")
VlnPlot(SERUAT_NPFR, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
FeatureScatter(SERUAT_NPFR, feature1 = "nCount_RNA", feature2 = "nFeature_RNA") +
geom_smooth(method = 'lm')
library(ggplot2)
library(dplyr)
FeatureScatter(SERUAT_NPFR, feature1 = "nCount_RNA", feature2 = "nFeature_RNA") +
geom_smooth(method = 'lm')
SERUAT_NPFR <- NormalizeData(SERUAT_NPFR, normalization.method = "LogNormalize", scale.factor = 10000)
View(SERUAT_NPFR@meta.data)
SERUAT_NPFR <- FindVariableFeatures(SERUAT_NPFR, selection.method = "vst", nfeatures = 2000)
# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(SERUAT_NPFR), 10)
plot1 <- VariableFeaturePlot(SERUAT_NPFR)
LabelPoints(plot = plot1, points = top10, repel = TRUE)
all.genes <- rownames(SERUAT_NPFR)
SERUAT_NPFR <- ScaleData(SERUAT_NPFR, features = all.genes)
str(SERUAT_NPFR)
SERUAT_NPFR <- RunPCA(SERUAT_NPFR, features = VariableFeatures(object = SERUAT_NPFR))
print(SERUAT_NPFR[["pca"]], dims = 1:5, nfeatures = 5)
DimHeatmap(SERUAT_NPFR, dims = 1, cells = 500, balanced = TRUE)
ElbowPlot(SERUAT_NPFR)
SERUAT_NPFR <- FindNeighbors(SERUAT_NPFR, dims = 1:15)
SERUAT_NPFR <- FindClusters(SERUAT_NPFR, resolution = c(0.1,0.3, 0.5, 0.7, 1))
View(SERUAT_NPFR@meta.data)
DimPlot(SERUAT_NPFR, group.by = "RNA_snn_res.0.1", label = TRUE)
Idents(SERUAT_NPFR)
Idents(SERUAT_NPFR) <- "RNA_snn_res.0.1"
Idents(SERUAT_NPFR)
SERUAT_NPFR <- RunUMAP(SERUAT_NPFR, dims = 1:15)
DimPlot(SERUAT_NPFR, reduction = "umap")
DefaultAssay(SERUAT_NPFR) <- "RNA"
Seurat::FeaturePlot(SERUAT_NPFR, "NPF")
plot <- DimPlot(SERUAT_NPFR, reduction = "umap")
LabelClusters(plot = plot, id = "ident")
plot <- DimPlot(SERUAT_NPFR, reduction = "umap")
LabelClusters(plot = plot, id = "ident")
plot <- DimPlot(SERUAT_NPFR, reduction = "pca") + NoLegend()
LabelClusters(plot = plot, id = "ident")
SERUAT_NPFR <- SetIdent(SERUAT_NPFR, value = status)
SERUAT_NPFR <- SetIdent(SERUAT_NPFR, value = SERUAT_NPFR@meta.data$annotation)
plot <- DimPlot(SERUAT_NPFR, reduction = "pca") + NoLegend()
LabelClusters(plot = plot, id = "ident")
plot <- DimPlot(SERUAT_NPFR, reduction = "pca")
LabelClusters(plot = plot, id = "ident")
plot <- DimPlot(SERUAT_NPFR, reduction = "pca")
LabelClusters(plot = plot, id = "ident")
LabelClusters(plot = plot, id = "ident")
View(woAnn)
Seurat::FeaturePlot(SERUAT_NPFR, "ELAV")
Seurat::FeaturePlot(SERUAT_NPFR, "Elav")
SERUAT_NPFR <- RunUMAP(SERUAT_NPFR, dims = 1:15)
DimPlot(SERUAT_NPFR, reduction = "umap")
DefaultAssay(SERUAT_NPFR) <- "RNA"
Seurat::FeaturePlot(SERUAT_NPFR, "Elav")
Seurat::FeaturePlot(SERUAT_NPFR, "NPF")
Seurat::FeaturePlot(SERUAT_NPFR, "BRP")
gene_names <-  highNpfr[["row_attrs/Gene"]][]
gene_of_interest <- "NPFR"
gene_of_interest %in% gene_names
gene_of_interest %in% all.genes
gene_of_interest <- "Elav"
gene_of_interest %in% all.genes
test<-as.data.frame(all.genes)
View(test)
gene_of_interest <- "elav"
gene_of_interest %in% all.genes
gene_of_interest <- "brp"
gene_of_interest %in% all.genes
gene_of_interest <- "Syt1"
gene_of_interest %in% all.genes
neruon_cell_genes <- c("elav", "NPF", "Syt1", "brp")
Seurat::FeaturePlot(SERUAT_NPFR, neruon_cell_genes, ncol=2)
Seurat::VlnPlot(SERUAT_NPFR,
features = neruon_cell_genes,
ncol = 2)
seu_int <- Seurat::AddModuleScore(SERUAT_NPFR,
features = list(neruon_cell_genes),
name = "neruon_cell_genes")
seu_int@meta.data
Seurat::VlnPlot(SERUAT_NPFR,
"neruon_cell_genes1")
Seurat::VlnPlot(SERUAT_NPFR,
"neruon_cell_genes1")
Seurat::FeaturePlot(SERUAT_NPFR, "neruon_cell_genes1")
